#AppRoot {
	.App {
		.ViewContainer {
			.Home.View {
				background: $backgroundColor;

				.ViewBox {
					display: flex;

					.Intro {
						display: block;
						position: relative;

						width: 100vw;

						max-width: 100%;

						background-color: #fff;

						.IntroStart {
							display: flex;
							position: relative;
							z-index: 2;

							flex-direction: column;

							align-items: center;
							justify-content: center;

							width: 100%;
							height: 100vh;
							min-height: $minHeightScreen;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall;
							}

							.Confetti {
								display: block;
								position: absolute;

								width: 100%;
								height: 100%;

								.ConfettiItem {
									display: flex;
									position: absolute;

									top: -50px;
									opacity: 1;

									width: 38px;
									height: 38px;
									border-radius: 19px;

									align-items: center;
									justify-content: center;

									.ConfettiItemContainer {
										display: flex;
										position: relative;

										align-items: center;
										justify-content: center;

										width: 38px;
										height: 38px;
										border-radius: 19px;

										overflow: hidden;

										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);

										background: #0fffff;

										.ConfettiBackground {
											display: flex;
											position: relative;

											align-items: center;
											justify-content: center;

											width: 32px;
											height: 32px;
											border-radius: 16px;

											overflow: hidden;

											background: radial-gradient(
												32px 32px at 50% 100%,
												transparent,
												#8000ff
											);

											.ConfettiPunkImage {
												width: 32px;
												height: 32px;

												-ms-interpolation-mode: nearest-neighbor;
												image-rendering: pixelated;
												image-rendering: -moz-crisp-edges;
											}
										}
									}
								}

								.ConfettiItem:nth-child(1) {
									left: 7%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 1s;
									animation-duration: 5s;

									.ConfettiItemContainer {
										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								.ConfettiItem:nth-child(2) {
									left: 14%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 2s;
									animation-duration: 9.5s;

									.ConfettiItemContainer {
										opacity: 0.6;
										filter: blur(1px);
										transform: scale(0.8);
									}
								}

								.ConfettiItem:nth-child(3) {
									left: 21%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 3s;
									animation-duration: 6.3s;

									.ConfettiItemContainer {
										opacity: 0.4;
										filter: blur(2px);
										transform: scale(0.6);
									}
								}

								.ConfettiItem:nth-child(4) {
									left: 28%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 4s;
									animation-duration: 7.5s;

									.ConfettiItemContainer {
										opacity: 0.6;
										filter: blur(1px);
										transform: scale(0.8);
									}
								}

								.ConfettiItem:nth-child(5) {
									left: 35%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 5s;
									animation-duration: 9.5s;

									.ConfettiItemContainer {
										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								.ConfettiItem:nth-child(6) {
									left: 42%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 1.5s;
									animation-duration: 7.8s;

									.ConfettiItemContainer {
										opacity: 0.6;
										filter: blur(1px);
										transform: scale(0.8);
									}
								}

								.ConfettiItem:nth-child(7) {
									left: 49%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 2.5s;
									animation-duration: 6.6s;

									.ConfettiItemContainer {
										opacity: 0.4;
										filter: blur(2px);
										transform: scale(0.6);
									}
								}

								.ConfettiItem:nth-child(8) {
									left: 56%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 3.5s;
									animation-duration: 10.5s;

									.ConfettiItemContainer {
										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								.ConfettiItem:nth-child(9) {
									left: 63%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 4.4s;
									animation-duration: 6.2s;

									.ConfettiItemContainer {
										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								.ConfettiItem:nth-child(10) {
									left: 70%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 5.2s;
									animation-duration: 8.5s;

									.ConfettiItemContainer {
										opacity: 0.6;
										filter: blur(1px);
										transform: scale(0.8);
									}
								}

								.ConfettiItem:nth-child(11) {
									left: 77%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 1.3s;
									animation-duration: 6.3s;

									.ConfettiItemContainer {
										opacity: 0.4;
										filter: blur(2px);
										transform: scale(0.6);
									}
								}

								.ConfettiItem:nth-child(12) {
									left: 84%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 2s;
									animation-duration: 8.5s;

									.ConfettiItemContainer {
										opacity: 0.7;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								.ConfettiItem:nth-child(13) {
									left: 91%;

									animation: makeItRain 1000ms infinite
										ease-out;
									animation-delay: 3s;
									animation-duration: 6.7s;

									.ConfettiItemContainer {
										opacity: 1;
										filter: blur(0.5px);
										transform: scale(1);
									}
								}

								@keyframes makeItRain {
									from {
										opacity: 1;
									}
									50% {
										opacity: 1;
									}
									to {
										opacity: 0;
										transform: translateY(65vh);
									}
								}
							}

							.IntroItem {
								display: flex;
								position: relative;

								z-index: 4;

								flex-grow: 1;
								width: 100%;

								flex-direction: column;

								align-items: center;
								justify-content: flex-start;

								padding-top: $heightHeader;

								@include responsiveMax($responsiveMed) {
									padding-top: $heightHeaderMed;
								}

								@include responsiveMax($responsiveSmall) {
									padding-top: 40px;
								}

								.PunkItem {
									display: flex;
									position: relative;
									flex-direction: column;
									align-items: center;
									justify-content: center;

									align-items: center;
									justify-content: flex-start;

									.PunkImage {
										display: flex;
										position: relative;
										align-items: center;
										justify-content: center;

										width: 220px;
										height: 220px;

										border-radius: 110px;

										background-color: #0fffff;

										.PunkImageCircle {
											display: flex;
											position: relative;

											align-items: flex-end;
											justify-content: center;

											width: 200px;
											height: 200px;

											overflow: hidden;

											border-radius: 100px;

											background: radial-gradient(
												200px 200px at 50% 100%,
												transparent,
												#8000ff
											);

											.Punk {
												display: block;

												z-index: 1;

												width: 190px;
												height: 190px;
												bottom: 0px;
												-ms-interpolation-mode: nearest-neighbor;
												image-rendering: pixelated;
												image-rendering: -moz-crisp-edges;
											}
										}
									}

									.PunkText {
										display: block;

										font-size: 80px;

										font-family: 'Gilroy', sans-serif;
										font-weight: 900;

										padding-top: 10px;
										text-align: center;

										padding-left: $padding;
										padding-right: $padding;

										.TextDark {
											color: #111;
										}

										.TextLight {
											color: #00ffff;
										}

										@include responsiveMax($responsiveMed) {
											font-size: 80px;

											padding-left: $paddingMed;
											padding-right: $paddingMed;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											font-size: 40px;

											padding-left: $paddingSmall;
											padding-right: $paddingSmall;
										}
									}

									.PunkSubText {
										display: block;
										font-family: 'Gilroy', sans-serif;
										font-weight: 700;
										font-size: 14px;

										padding-top: 0px;
										margin-top: -10px;

										padding-left: $padding;
										padding-right: $padding;

										text-align: center;

										color: #111;

										@include responsiveMax($responsiveMed) {
											font-size: 14px;
											margin-top: -10px;

											padding-left: $paddingMed;
											padding-right: $paddingMed;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											font-size: 14px;
											margin-top: 0px;

											padding-left: $paddingSmall;
											padding-right: $paddingSmall;
										}
									}
								}

								.IntroSubContent {
									display: flex;
									position: relative;

									flex-grow: 0;
									flex-direction: column;

									align-items: center;
									justify-content: center;

									@include responsiveMax($responsiveMed) {
										flex-grow: 0;
									}

									@include responsiveMax($responsiveSmall) {
										flex-grow: 1;
									}

									.MintAmountContainer {
										display: flex;
										position: relative;

										flex-direction: column;
										align-items: center;

										padding-top: 50px;
										padding-bottom: 50px;

										@include responsiveMax($responsiveMed) {
											padding-top: 50px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											padding-top: 20px;
										}

										.MintText {
											display: block;
											position: relative;

											font-family: 'Gilroy', sans-serif;
											font-weight: 700;

											font-size: 10px;

											color: #111;

											text-align: center;
											padding-bottom: 5px;
										}

										.MintedItems {
											display: flex;
											position: relative;

											overflow: hidden;

											flex-direction: row-reverse;

											align-items: center;
											justify-content: center;

											width: 120px;
											height: 36px;
											border-radius: 18px;

											padding-left: 16px;
											padding-right: 16px;

											font-family: 'Gilroy', sans-serif;

											border: 2px solid #111;
											background-color: #fff;

											.MintedItemsText {
												display: block;
												position: static;

												text-align: center;

												user-select: none;

												color: #111;

												font-size: 14px;
												font-weight: 700;
												letter-spacing: normal;

												white-space: nowrap;

												font-family: 'Gilroy',
													sans-serif;
											}
										}
									}
								}

								.IntroFooterContainer {
									display: flex;
									position: relative;

									width: 100%;

									align-items: center;
									justify-content: center;

									padding-left: $padding;
									padding-right: $padding;
									padding-bottom: $padding;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed;
										padding-right: $paddingMed;
										padding-bottom: $paddingMed;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
										padding-bottom: $paddingSmall;
									}

									.FooterContainerSizer {
										display: flex;
										position: relative;

										width: 100%;
										max-width: 300px;

										align-items: center;
										justify-content: center;

										@include responsiveMax($responsiveMed) {
											max-width: 350px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											max-width: 100%;
										}
									}
								}
							}
						}

						.IntroMapView {
							display: flex;
							position: relative;

							flex-direction: column;

							align-items: center;

							width: 100%;
							height: 100vh;
							min-height: $minHeightScreen;

							z-index: 10;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall;
							}

							.MapViewSpacerTop {
								display: block;
								position: relative;

								width: 100%;
								height: $heightHeader;

								@include responsiveMax($responsiveMed) {
									height: $heightHeaderMed;
								}

								@include responsiveMax($responsiveSmall) {
									height: $heightHeaderSmall;
								}
							}

							.MapViewTitle {
								display: block;
								position: relative;

								text-align: center;

								font-size: 42px;
								letter-spacing: 1.5px;

								font-weight: 800;

								color: rgba(86, 5, 199, 1);

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;

								padding-top: $padding / 2;
								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									text-align: center;

									font-size: 42px;
									letter-spacing: 1.5px;

									padding-top: $paddingMed / 2;
									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									text-align: center;

									font-size: 30px;
									letter-spacing: 1px;

									padding-top: $paddingSmall / 2;
									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}
							}

							.MapViewSubTitle {
								display: block;
								position: relative;

								text-align: center;

								font-size: 20px;
								letter-spacing: normal;
								font-weight: 600;

								color: rgba(61, 4, 174, 0.7);

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;

								padding-left: $padding;
								padding-right: $padding;
								padding-bottom: $padding / 2;

								@include responsiveMax($responsiveMed) {
									text-align: center;

									font-size: 20px;
									letter-spacing: normal;

									padding-left: $paddingMed;
									padding-right: $paddingMed;
									padding-bottom: $paddingMed / 2;
								}

								@include responsiveMax($responsiveSmall) {
									text-align: center;

									font-size: 16px;
									letter-spacing: normal;

									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
									padding-bottom: $paddingSmall / 2;
								}
							}

							.MapView {
								display: flex;
								position: relative;

								width: 100%;

								flex-grow: 1;

								align-items: center;
								justify-content: center;

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;

								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}

								.MapViewContainer {
									display: flex;
									position: relative;

									width: 100%;
									height: 100%;
									max-width: 100%;

									align-items: center;
									justify-content: center;

									.MapViewImage {
										display: block;
										position: absolute;

										width: 100%;
										height: auto;
									}
								}

								.MapViewImageContainer {
									display: block;
									position: absolute;

									width: 100%;
									height: 100%;
									max-width: 100%;

									.MapContentLondon {
										display: block;
										position: absolute;

										z-index: 2;

										height: 30%;
										border-radius: 50%;

										left: 50%;
										top: 15%;

										@include responsiveMax($responsiveMed) {
											height: 30%;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											height: 30%;
										}

										.MapContentImageOverlay {
											display: block;
											position: absolute;

											border-radius: 50%;
											width: auto;
											height: 100%;

											transition: transform 0.6s 0.2s
												$easeOutQuart;

											transform: translate(-50%, -50%)
												scale(0);
										}
									}

									.MapContentLondon:after {
										content: '';
										display: block;
										padding-bottom: 100%;
									}

									.MapContentMoscow {
										display: block;
										position: absolute;

										z-index: 2;

										height: 40%;
										border-radius: 50%;

										right: 10%;
										top: 40%;

										@include responsiveMax($responsiveMed) {
											right: 10%;
											height: 40%;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											right: 20%;
											height: 40%;
										}

										.MapContentImageOverlay {
											display: block;
											position: absolute;

											border-radius: 50%;
											width: auto;
											height: 100%;

											transition: transform 0.6s 0.2s
												$easeOutQuart;

											transform: translate(-50%, -50%)
												scale(0);
										}
									}

									.MapContentMoscow:after {
										content: '';
										display: block;
										padding-bottom: 100%;
									}

									.MapContentCaracas {
										display: block;
										position: absolute;

										z-index: 2;

										height: 30%;
										border-radius: 50%;

										left: 50%;
										top: 70%;

										@include responsiveMax($responsiveMed) {
											height: 30%;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											height: 30%;
										}

										.MapContentImageOverlay {
											display: block;
											position: absolute;

											border-radius: 50%;
											width: auto;
											height: 100%;

											transition: transform 0.6s 0.2s
												$easeOutQuart;

											transform: translate(-50%, -50%)
												scale(0);
										}
									}

									.MapContentCaracas:after {
										content: '';
										display: block;
										padding-bottom: 100%;
									}

									.MapContentSanFrancisco {
										display: block;
										position: absolute;

										z-index: 2;

										height: 40%;
										border-radius: 50%;

										left: 10%;
										top: 40%;

										@include responsiveMax($responsiveMed) {
											left: 10%;
											height: 40%;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											left: 20%;
											height: 40%;
										}

										.MapContentImageOverlay {
											display: block;
											position: absolute;

											border-radius: 50%;
											width: auto;
											height: 100%;

											transition: transform 0.6s 0.2s
												$easeOutQuart;

											transform: translate(-50%, -50%)
												scale(0);
										}
									}

									.MapContentSanFrancisco:after {
										content: '';
										display: block;
										padding-bottom: 100%;
									}
								}
							}

							.MapViewSpacerBottom {
								display: flex;
								position: relative;

								width: 100%;
								height: $heightHeader;

								flex-direction: column;
								align-items: center;

								@include responsiveMax($responsiveMed) {
									height: $heightHeaderMed;
								}

								@include responsiveMax($responsiveSmall) {
									height: $heightHeaderSmall * 2;
								}

								.MapViewActionButton {
									display: block;
									position: absolute;
									bottom: $padding;

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										bottom: $paddingMed;
									}

									@include responsiveMax($responsiveSmall) {
										bottom: $paddingSmall;
									}
								}
							}
						}

						.IntroEffective {
							display: block;
							position: relative;
							z-index: 3;

							width: 100%;
							height: 100vh;
							min-height: $minHeightScreen;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall;
							}

							.IntroEffectiveHeader {
								display: block;

								z-index: 10;

								position: absolute;

								left: 0px;

								top: 32%;
								bottom: auto;

								@include responsiveMax($responsiveMed) {
									top: 34%;
									bottom: auto;
								}

								@include responsiveMax($responsiveSmall) {
									top: 26%;
									bottom: auto;
								}

								.EffectiveHeaderText {
									display: block;
									position: relative;

									color: rgba(255, 255, 255, 1);

									font-weight: 800;

									font-size: calc(42px + 3vw);
									line-height: calc(42px + 3vw);

									letter-spacing: 2px;

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										font-size: calc(42px + 3vw);
										line-height: calc(42px + 3vw);

										letter-spacing: 2px;
									}

									@include responsiveMax($responsiveSmall) {
										font-size: calc(30px + 2vw);
										line-height: calc(30px + 2vw);

										letter-spacing: 1px;
									}
								}

								.EffectiveHeaderSubText {
									display: block;
									position: relative;

									font-weight: 600;

									max-width: 75vw;
									padding-top: 10px;
									font-size: 20px;
									letter-spacing: normal;

									color: rgba(255, 255, 255, 0.8);

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										max-width: 90vw;
										padding-top: 10px;
										font-size: 20px;
										letter-spacing: normal;

										color: rgba(255, 255, 255, 0.8);
									}

									@include responsiveMax($responsiveSmall) {
										max-width: 100vw;
										padding-top: 5px;
										font-size: 16px;
										letter-spacing: normal;

										color: rgba(255, 255, 255, 0.8);
									}
								}

								.IntroEffectiveHeaderHolder {
									display: block;
									position: relative;

									width: 100vw;
									max-width: 100%;

									padding-left: $padding;
									padding-right: $padding;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed;
										padding-right: $paddingMed;
									}
									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}
								}
							}

							.EffectiveActionButton {
								display: flex;
								position: absolute;

								flex-direction: row;
								justify-content: flex-start;

								width: 100%;
								bottom: $padding;

								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									justify-content: flex-start;

									bottom: $paddingMed;

									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									justify-content: flex-start;

									bottom: $paddingSmall;

									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}
							}
						}

						.IntroExplainView {
							display: block;
							position: relative;

							width: 100%;
							min-height: $minHeightScreen * 2;

							z-index: 10;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed * 2;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall * 2;
							}

							.ExplainViewSpacerTop {
								display: block;
								position: relative;

								width: 100%;
								height: $heightHeader;

								@include responsiveMax($responsiveMed) {
									height: $heightHeaderMed;
								}

								@include responsiveMax($responsiveSmall) {
									height: $heightHeaderSmall;
								}
							}

							.ExplainViewTitle {
								display: block;
								position: relative;

								text-align: center;

								font-size: 42px;
								letter-spacing: 1.5px;

								font-weight: 800;

								color: rgba(86, 5, 199, 1);

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;

								padding-top: $padding / 2;
								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									text-align: center;

									font-size: 42px;
									letter-spacing: 1.5px;

									padding-top: $paddingMed / 2;
									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									text-align: center;

									font-size: 30px;
									letter-spacing: 1px;

									padding-top: $paddingSmall / 2;
									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}
							}

							.ExplainItem {
								display: flex;
								position: relative;

								padding-top: $padding;
								padding-bottom: $padding;

								flex-direction: row;
								justify-content: space-between;

								@include responsiveMax($responsiveMed) {
									flex-direction: row;

									padding-top: $paddingMed;
									padding-bottom: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									flex-direction: column;

									padding-top: $paddingSmall;
									padding-bottom: $paddingSmall;
								}

								.ExplainText {
									display: block;
									position: relative;

									width: 50%;
									max-width: 50%;

									min-height: 320px;

									@include responsiveMax($responsiveMed) {
										width: 50%;
										max-width: 50%;

										min-height: 320px;
									}

									@include responsiveMax($responsiveSmall) {
										width: 100%;
										max-width: 100%;

										min-height: auto;
									}

									.ExplainTextTitle {
										display: block;
										position: relative;

										font-weight: 800;

										color: rgba(86, 5, 199, 1);

										font-size: calc(42px + 3vw);
										line-height: calc(42px + 3vw);

										letter-spacing: 2px;
										max-width: calc(50vw - 48px - 24px);

										transition: opacity 0.4s $linear,
											transform 0.4s $easeOut;

										@include responsiveMax($responsiveMed) {
											font-size: calc(42px + 3vw);
											line-height: calc(42px + 3vw);

											letter-spacing: 2px;
											max-width: calc(50vw - 48px - 24px);
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											max-width: 100%;
											font-size: 30px;

											letter-spacing: 1px;
										}
									}

									.ExplainTextSubText {
										display: block;
										position: relative;

										font-size: 20px;
										letter-spacing: normal;
										font-weight: 600;

										color: rgba(61, 4, 174, 0.7);

										max-width: calc(50vw - 48px - 24px);

										transition: opacity 0.4s $linear,
											transform 0.4s $easeOut;

										@include responsiveMax($responsiveMed) {
											font-size: 20px;
											letter-spacing: normal;
											max-width: calc(50vw - 48px - 24px);
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											font-size: 16px;
											letter-spacing: normal;
											max-width: 100%;
										}
									}

									.ExplainDivider {
										display: block;
										position: absolute;

										width: 9px;
										height: 9px;
										border-radius: 50%;

										left: $padding;
										bottom: $padding;

										background-color: $underlineColor;

										@include responsiveMax($responsiveMed) {
											display: block;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											display: none;
										}
									}
								}

								.ExplainImage {
									display: block;
									position: relative;

									width: 50%;
									max-width: 50%;

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										width: 50%;
										max-width: 50%;
									}

									@include responsiveMax($responsiveSmall) {
										width: 100%;
										max-width: 100%;

										text-align: center;

										padding-top: $paddingSmall;
									}

									.ExplainImageContent {
										display: inline-block;
										width: 400px;
										height: 400px;

										@include responsiveMax($responsiveMed) {
											width: 320px;
											height: 320px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											width: 220px;
											height: 220px;
										}
									}

									.ExplainImageContent.JoyStick {
										margin-left: 0;
										margin-right: 16px;

										@include responsiveMax($responsiveMed) {
											margin-left: 0;
											margin-right: 0px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											margin-left: 0;
											margin-right: 0;
										}
									}

									.ExplainImageContent.DeLorean {
										margin-left: 44px;
										margin-right: 0;

										@include responsiveMax($responsiveMed) {
											margin-left: 38px;
											margin-right: 0;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											margin-left: 0;
											margin-right: 0;
										}
									}

									.ExplainImageContent.Cerdito {
										margin-left: 0;
										margin-right: 6px;

										@include responsiveMax($responsiveMed) {
											margin-left: 0;
											margin-right: 0px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											margin-left: 0;
											margin-right: 0;
										}
									}

									.ExplainImageContent.Binocular {
										margin-left: -16px;
										margin-right: 0;

										@include responsiveMax($responsiveMed) {
											margin-left: -10px;
											margin-right: 0;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											margin-left: 0;
											margin-right: 0;
										}
									}
								}
							}

							.ExplainItem.Left {
								flex-direction: row;

								@include responsiveMax($responsiveMed) {
									flex-direction: row;
								}

								@include responsiveMax($responsiveSmall) {
									flex-direction: column;
								}

								.ExplainText {
									padding-left: $padding;
									padding-right: $padding / 2;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed;
										padding-right: $paddingMed / 2;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}

									.ExplainDivider {
										left: $padding;
									}
								}

								.ExplainImage {
									text-align: right;
									padding-left: $padding / 2;
									padding-right: 0px;

									@include responsiveMax($responsiveMed) {
										text-align: right;
										padding-left: $paddingMed / 2;
										padding-right: 0px;
									}

									@include responsiveMax($responsiveSmall) {
										text-align: center;
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}
								}
							}

							.ExplainItem.Right {
								flex-direction: row;

								@include responsiveMax($responsiveMed) {
									flex-direction: row;
								}

								@include responsiveMax($responsiveSmall) {
									flex-direction: column-reverse;
								}

								.ExplainText {
									padding-left: $padding / 2;
									padding-right: $padding;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed / 2;
										padding-right: $paddingMed;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}

									.ExplainDivider {
										left: $padding / 2;
									}
								}

								.ExplainImage {
									text-align: left;
									padding-left: 0px;
									padding-right: $padding / 2;

									@include responsiveMax($responsiveMed) {
										text-align: left;
										padding-left: 0;
										padding-right: $paddingMed / 2;
									}

									@include responsiveMax($responsiveSmall) {
										text-align: center;
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}
								}
							}
						}

						.IntroComoFunciona {
							display: block;
							position: relative;

							z-index: 12;

							min-height: $minHeightScreen / 2;

							background: $backgroundColorGradient;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed / 2;
								background: $backgroundColorGradientMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall / 2;
								background: $backgroundColorGradientSmall;
							}

							.ComoFuncionaSpacerTop {
								display: block;
								position: relative;

								width: 100%;
								height: $heightHeader;

								@include responsiveMax($responsiveMed) {
									height: $heightHeaderMed;
								}

								@include responsiveMax($responsiveSmall) {
									height: $heightHeaderSmall;
								}
							}

							.ComoFuncionaTitle {
								display: block;
								position: relative;

								text-align: center;

								font-size: 42px;
								letter-spacing: 1.5px;

								font-weight: 800;

								color: #fff;

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;

								padding-top: $padding / 2;
								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									text-align: center;

									font-size: 42px;
									letter-spacing: 1.5px;

									padding-top: $paddingMed / 2;
									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									text-align: center;

									font-size: 30px;
									letter-spacing: 1px;

									padding-top: $paddingSmall / 2;
									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}
							}

							.ComoFuncionaContent {
								display: flex;
								position: relative;

								flex-direction: row;

								padding-top: $padding;
								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									flex-direction: row;

									padding-top: $paddingMed;
									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									flex-direction: column;

									padding-top: $paddingSmall;
									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}

								.ComoFuncionaHolder {
									display: flex;
									position: relative;

									flex-grow: 1;

									flex-direction: row;

									@include responsiveMax($responsiveMed) {
										flex-direction: column;
									}

									@include responsiveMax($responsiveSmall) {
										flex-direction: column;
									}

									.ComoFuncionaItem {
										display: flex;
										position: relative;

										flex-grow: 1;

										flex-direction: column;
										padding-bottom: $padding;

										@include responsiveMax($responsiveMed) {
											flex-direction: column;
											padding-bottom: $padding;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											flex-direction: column;
											padding-bottom: $padding;
										}

										.ComoFuncionaImage {
											display: block;
											position: relative;

											height: 48px;

											text-align: center;

											transition: opacity 0.4s $linear,
												transform 0.4s $easeOut;

											@include responsiveMax(
												$responsiveMed
											) {
												height: 48px;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												height: 32px;
											}

											.ComoFuncionaImageContent {
												display: inline-block;
												height: 100%;
											}
										}

										.ComoFuncionaText {
											display: block;
											position: relative;

											text-align: center;

											color: #fff;

											padding-top: $padding / 2;

											transition: opacity 0.4s $linear,
												transform 0.4s $easeOut;

											@include responsiveMax(
												$responsiveMed
											) {
												padding-top: $paddingMed / 2;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												padding-top: $paddingSmall / 2;
											}

											.ComoFuncionaTextTitle {
												display: block;
												position: relative;

												color: #fff;

												font-size: 42px;
												font-weight: 600;

												letter-spacing: 1px;

												@include responsiveMax(
													$responsiveMed
												) {
													font-size: 42px;
													letter-spacing: 1px;
												}

												@include responsiveMax(
													$responsiveSmall
												) {
													font-size: 24px;
													letter-spacing: normal;
												}
											}

											.ComoFuncionaTextContent {
												display: block;
												position: relative;

												padding-top: 20px;

												color: rgba(255, 255, 255, 0.8);
												font-weight: 600;

												font-size: 16px;
												letter-spacing: normal;

												@include responsiveMax(
													$responsiveMed
												) {
													font-size: 16px;
													letter-spacing: normal;
												}

												@include responsiveMax(
													$responsiveSmall
												) {
													font-size: 16px;
													letter-spacing: normal;
												}
											}
										}
									}

									.ComoFuncionaItem:nth-of-type(1) {
										padding-left: 0px;
										padding-right: 15px;

										@include responsiveMax($responsiveMed) {
											padding-left: 0px;
											padding-right: 0px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											padding-left: 0px;
											padding-right: 0px;
										}
									}

									.ComoFuncionaItem:nth-of-type(2) {
										padding-left: 15px;
										padding-right: 0px;

										@include responsiveMax($responsiveMed) {
											padding-left: 0px;
											padding-right: 0px;
										}

										@include responsiveMax(
											$responsiveSmall
										) {
											padding-left: 0px;
											padding-right: 0px;
										}
									}
								}

								.ComoFuncionaHolder:nth-of-type(1) {
									padding-left: 0px;
									padding-right: 15px;

									@include responsiveMax($responsiveMed) {
										padding-left: 15px;
										padding-right: 0px;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: 0px;
										padding-right: 0px;
									}
								}

								.ComoFuncionaHolder:nth-of-type(2) {
									padding-left: 15px;
									padding-right: 0px;

									@include responsiveMax($responsiveMed) {
										padding-left: 15px;
										padding-right: 0px;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: 0px;
										padding-right: 0px;
									}
								}
							}

							.ComoFuncionaButton {
								display: flex;
								position: relative;

								flex-direction: column;
								align-items: center;

								width: 100%;
								height: 40px;

								.ComoFuncionaActionButton {
									display: block;
									position: absolute;

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;
								}
							}

							.ComoFuncionaSpacerBottom {
								display: flex;
								position: relative;

								flex-direction: column;
								align-items: center;

								width: 100%;
								height: $heightHeader + 30px;

								@include responsiveMax($responsiveMed) {
									height: $heightHeaderMed + 30px;
								}

								@include responsiveMax($responsiveSmall) {
									height: $heightHeaderSmall + 30px;
								}
							}
						}

						.IntroParaNegocios {
							display: block;
							position: relative;

							width: 100%;
							height: 100vh;
							min-height: $minHeightScreen;

							z-index: 10;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall;
							}

							.IntroParaNegociosHeader {
								display: block;
								position: absolute;

								z-index: 10;

								left: 0px;

								top: 32%;
								bottom: auto;

								@include responsiveMax($responsiveMed) {
									top: 34%;
									bottom: auto;
								}

								@include responsiveMax($responsiveSmall) {
									top: 36%;
									bottom: auto;
								}

								.ParaNegociosHeaderText {
									display: block;
									position: relative;

									color: rgba(255, 255, 255, 1);

									font-weight: 800;

									font-size: calc(42px + 3vw);
									line-height: calc(42px + 3vw);

									letter-spacing: 2px;

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										font-size: calc(42px + 3vw);
										line-height: calc(42px + 3vw);

										letter-spacing: 2px;
									}

									@include responsiveMax($responsiveSmall) {
										font-size: calc(30px + 2vw);
										line-height: calc(30px + 2vw);

										letter-spacing: 1px;
									}
								}

								.ParaNegociosHeaderSubText {
									display: block;
									position: relative;

									font-weight: 600;

									max-width: 75vw;
									padding-top: 10px;
									font-size: 20px;
									letter-spacing: normal;

									color: rgba(255, 255, 255, 0.8);

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									@include responsiveMax($responsiveMed) {
										max-width: 90vw;
										padding-top: 10px;
										font-size: 20px;
										letter-spacing: normal;

										color: rgba(255, 255, 255, 0.8);
									}

									@include responsiveMax($responsiveSmall) {
										max-width: 100vw;
										padding-top: 5px;
										font-size: 16px;
										letter-spacing: normal;

										color: rgba(255, 255, 255, 0.8);
									}
								}

								.ParaNegociosHeaderHolder {
									display: block;
									position: relative;

									width: 100vw;
									max-width: 100%;

									padding-left: $padding;
									padding-right: $padding;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed;
										padding-right: $paddingMed;
									}
									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}
								}
							}

							.ParaNegociosActionButton {
								display: flex;
								position: absolute;

								flex-direction: row;
								justify-content: flex-start;

								width: 100%;
								bottom: $padding;

								padding-left: $padding;
								padding-right: $padding;

								@include responsiveMax($responsiveMed) {
									justify-content: flex-start;

									bottom: $paddingMed;

									padding-left: $paddingMed;
									padding-right: $paddingMed;
								}

								@include responsiveMax($responsiveSmall) {
									justify-content: flex-start;

									bottom: $paddingSmall;

									padding-left: $paddingSmall;
									padding-right: $paddingSmall;
								}
							}
						}

						.IntroFormGetMuevo {
							display: block;
							position: relative;

							z-index: 12;

							min-height: $minHeightScreen;

							@include responsiveMax($responsiveMed) {
								min-height: $minHeightScreenMed;
							}

							@include responsiveMax($responsiveSmall) {
								min-height: $minHeightScreenSmall;
							}

							.IntroFormGetMuevoSizer {
								display: block;
								position: relative;
								min-height: 100vh;

								.FormGetMuevoSpacerTop {
									display: block;
									position: relative;

									width: 100%;
									height: $heightHeader;

									@include responsiveMax($responsiveMed) {
										height: $heightHeaderMed;
									}

									@include responsiveMax($responsiveSmall) {
										height: $heightHeaderSmall;
									}
								}

								.FormGetMuevoTitle {
									display: block;
									position: relative;

									text-align: center;

									font-size: 42px;
									letter-spacing: 1px;

									font-weight: 800;

									color: rgba(86, 5, 199, 1);

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;

									padding-top: $padding / 2;
									padding-left: $padding;
									padding-right: $padding;

									@include responsiveMax($responsiveMed) {
										text-align: center;

										font-size: 42px;
										letter-spacing: 1.5px;

										padding-top: $paddingMed / 2;
										padding-left: $paddingMed;
										padding-right: $paddingMed;
									}

									@include responsiveMax($responsiveSmall) {
										text-align: center;

										font-size: 30px;
										letter-spacing: 1px;

										padding-top: $paddingSmall / 2;
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}
								}

								.FormGetMuevo {
									display: flex;
									position: relative;

									flex-direction: column;
									align-items: center;

									padding-left: $padding;
									padding-right: $padding;

									@include responsiveMax($responsiveMed) {
										padding-left: $paddingMed;
										padding-right: $paddingMed;
									}

									@include responsiveMax($responsiveSmall) {
										padding-left: $paddingSmall;
										padding-right: $paddingSmall;
									}

									.FormLoader {
										display: block;
										position: absolute;

										z-index: 12;

										width: 100%;
										height: 100%;

										opacity: 1;

										transition: opacity 0.4s $linear;

										.SpinnerContent {
											display: block;
											position: absolute;
											z-index: 1;

											width: 32px;
											height: 32px;

											left: 50%;
											top: 45%;

											transform: translate(-50%, -50%);

											.Spinner {
												display: block;
												position: relative;
												width: 32px;
												height: 32px;

												.SpinnerWrapper {
													display: block;
													position: absolute;

													top: 0px;
													left: 0px;

													width: 100%;
													height: 100%;

													.SpinnerContainer {
														display: block;
														position: absolute;

														width: 100%;
														height: 100%;
														opacity: 0;

														z-index: 2;

														border-color: #0fffff;

														.GapPatch {
															position: absolute;
															top: 0;
															left: 45%;
															width: 10%;
															height: 100%;
															overflow: hidden;
															border-color: inherit;

															.Circle {
																width: 1000%;
																left: -450%;
															}
														}

														.CircleClipper {
															display: inline-block;
															position: relative;
															width: 50%;
															height: 100%;
															overflow: hidden;
															border-color: inherit;

															.Circle {
																width: 200%;
																height: 100%;
																border-width: 3px;
																border-style: solid;
																border-color: inherit;
																border-bottom-color: transparent !important;
																border-radius: 50%;

																animation: none;
																position: absolute;
																top: 0;
																right: 0;
																bottom: 0;
															}
														}

														.CircleClipper.Left {
															float: left;

															.Circle {
																left: 0;
																border-right-color: transparent !important;
																transform: rotate(
																	129deg
																);
															}
														}

														.CircleClipper.Right {
															float: right;

															.Circle {
																left: -100%;
																border-left-color: transparent !important;
																transform: rotate(
																	-129deg
																);
															}
														}
													}

													.SpinnerBackground {
														position: absolute;
														width: 100%;
														height: 100%;

														border-width: 3px;
														border-style: solid;
														border-color: rgba(
															15,
															255,
															255,
															0.3
														);
														border-radius: 50%;
													}
												}
											}

											.Spinner.Active {
												.SpinnerWrapper {
													animation: container-rotate
														1568ms linear infinite;

													@keyframes container-rotate {
														to {
															transform: rotate(
																360deg
															);
														}
													}

													.SpinnerContainer {
														opacity: 1;

														animation: fill-unfill-rotate
															5332ms
															cubic-bezier(
																0.4,
																0,
																0.2,
																1
															)
															infinite both;

														@keyframes fill-unfill-rotate {
															12.5% {
																transform: rotate(
																	135deg
																);
															}

															25% {
																transform: rotate(
																	270deg
																);
															}

															37.5% {
																transform: rotate(
																	405deg
																);
															}

															50% {
																transform: rotate(
																	540deg
																);
															}

															62.5% {
																transform: rotate(
																	675deg
																);
															}

															75% {
																transform: rotate(
																	810deg
																);
															}

															87.5% {
																transform: rotate(
																	945deg
																);
															}

															to {
																transform: rotate(
																	1080deg
																);
															}
														}

														.CircleClipper.Left {
															.Circle {
																animation: left-spin
																	1333ms
																	cubic-bezier(
																		0.4,
																		0,
																		0.2,
																		1
																	)
																	infinite
																	both;

																@keyframes left-spin {
																	from {
																		transform: rotate(
																			130deg
																		);
																	}

																	50% {
																		transform: rotate(
																			-5deg
																		);
																	}
																	to {
																		transform: rotate(
																			130deg
																		);
																	}
																}
															}
														}

														.CircleClipper.Right {
															.Circle {
																animation: right-spin
																	1333ms
																	cubic-bezier(
																		0.4,
																		0,
																		0.2,
																		1
																	)
																	infinite
																	both;

																@keyframes right-spin {
																	from {
																		transform: rotate(
																			-130deg
																		);
																	}

																	50% {
																		transform: rotate(
																			5deg
																		);
																	}

																	to {
																		transform: rotate(
																			-130deg
																		);
																	}
																}
															}
														}
													}
												}
											}
										}
									}

									.FormLoader.Hidden {
										display: block;
										position: absolute;

										width: 0;
										height: 0;

										opacity: 0;
										transition: opacity 0.4s $linear;

										overflow: hidden;
										visibility: hidden;
									}

									.FormError {
										display: flex;
										position: absolute;

										z-index: 11;

										width: 100%;
										height: 100%;

										flex-direction: column;

										align-items: center;
										justify-content: flex-start;

										opacity: 1;

										transition: opacity 0.4s $linear;

										.CircleDone {
											display: flex;
											position: relative;

											width: 40px;
											height: 40px;

											align-items: center;
											justify-content: center;

											border-radius: 50%;
											background-color: #5605c7;

											.CircleDoneImage {
												display: block;
												position: absolute;

												width: 10px;
												height: 10px;
											}
										}

										.FormErrorTitle {
											display: block;
											position: relative;

											text-align: center;

											font-size: 24px;
											font-weight: 600;

											padding-top: $padding;

											color: rgba(61, 4, 174, 1);
											font-family: 'Roboto', sans-serif;

											@include responsiveMax(
												$responsiveMed
											) {
												padding-top: $paddingMed;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												padding-top: $paddingSmall;
											}
										}

										.FormErrorSubTitle {
											display: block;
											position: relative;

											text-align: center;

											font-size: 16px;
											font-weight: 600;

											padding-bottom: $padding / 2;

											color: rgba(61, 4, 174, 0.7);
											font-family: 'Roboto', sans-serif;

											@include responsiveMax(
												$responsiveMed
											) {
												padding-bottom: $paddingMed / 2;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												padding-bottom: $paddingSmall /
													2;
											}
										}

										.ErrorButton {
											display: block;
											position: absolute;

											bottom: 0px;
										}
									}

									.FormResult {
										display: flex;
										position: absolute;

										z-index: 11;

										width: 100%;
										height: 100%;

										flex-direction: column;

										align-items: center;
										justify-content: flex-start;

										opacity: 1;

										transition: opacity 0.4s $linear;

										.CircleDone {
											display: flex;
											position: relative;

											width: 40px;
											height: 40px;

											align-items: center;
											justify-content: center;

											border-radius: 50%;
											background-color: #5605c7;

											.CircleDoneImage {
												display: block;
												position: absolute;

												width: 30px;
												height: 30px;
											}
										}

										.FormResultTitle {
											display: block;
											position: relative;

											text-align: center;

											font-size: 24px;
											font-weight: 600;

											padding-top: $padding;

											color: rgba(61, 4, 174, 1);
											font-family: 'Roboto', sans-serif;

											@include responsiveMax(
												$responsiveMed
											) {
												padding-top: $paddingMed;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												padding-top: $paddingSmall;
											}
										}

										.FormResultSubTitle {
											display: block;
											position: relative;

											text-align: center;

											font-size: 16px;
											font-weight: 600;

											padding-bottom: $padding / 2;

											color: rgba(61, 4, 174, 0.7);
											font-family: 'Roboto', sans-serif;

											@include responsiveMax(
												$responsiveMed
											) {
												padding-bottom: $paddingMed / 2;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												padding-bottom: $paddingSmall /
													2;
											}
										}
									}

									.FormError.Hidden {
										display: block;
										position: absolute;

										width: 0;
										height: 0;

										opacity: 0;
										transition: opacity 0.4s $linear;

										overflow: hidden;
										visibility: hidden;
									}

									.FormResult.Hidden {
										display: block;
										position: absolute;

										width: 0;
										height: 0;

										opacity: 0;
										transition: opacity 0.4s $linear;

										overflow: hidden;
										visibility: hidden;
									}

									.FormGetMuevoForm {
										display: block;
										position: relative;

										width: 100%;
										max-width: 500px;

										transition: opacity 0.4s $linear;

										input:-webkit-autofill::first-line {
											font-size: 16px;
											font-weight: 600;
											font-family: 'Roboto', sans-serif;
										}

										.FormAnimationOne {
											display: block;
											position: relative;

											transition: opacity 0.4s $linear,
												transform 0.4s $easeOut;
										}

										.FormSubTitle {
											display: block;
											position: relative;

											padding-bottom: 16px;

											text-align: center;

											font-size: 16px;
											font-weight: 600;

											color: rgba(61, 4, 174, 0.7);
											font-family: 'Roboto', sans-serif;
										}

										.InputRowPositioner {
											display: flex;
											position: relative;

											flex-direction: row;

											@include responsiveMax(
												$responsiveMed
											) {
												flex-direction: row;
											}

											@include responsiveMax(
												$responsiveSmall
											) {
												flex-direction: column;
											}

											.InputRowSpacer {
												display: block;
												position: relative;

												width: 50px;

												@include responsiveMax(
													$responsiveMed
												) {
													display: block;
												}

												@include responsiveMax(
													$responsiveSmall
												) {
													display: none;
												}
											}
										}
									}

									.FormGetMuevoForm.Hidden {
										opacity: 0;
									}
								}

								.FormGetMuevoSpacerBottom {
									display: block;
									position: relative;

									height: $padding * 2;

									@include responsiveMax($responsiveMed) {
										height: $paddingMed * 2;
									}

									@include responsiveMax($responsiveSmall) {
										height: $paddingSmall * 2;
									}
								}
							}
						}
					}
				}
			}

			.Home.View.Load {
				.ViewBox {
					.Intro {
						.IntroStart {
							.Header {
								.HeaderTextHolder {
									.HeaderText.One {
										opacity: 0;
										transform: translate3d(0, 60px, 0);

										transition: opacity 0.4s $linear,
											transform 0.4s $easeOut;
									}

									.HeaderText.Two {
										opacity: 0;
										transform: translate3d(0, 60px, 0);

										transition: opacity 0.4s $linear,
											transform 0.4s $easeOut;
									}
								}

								.HeaderText.Three {
									opacity: 0;
									transform: translate3d(0, 60px, 0);

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;
								}

								.HeaderSubText.Four {
									opacity: 0;
									transform: translate3d(0, 60px, 0);

									transition: opacity 0.4s $linear,
										transform 0.4s $easeOut;
								}
							}

							.IntroActionButton {
								opacity: 0;
								transform: translate3d(0px, 60px, 0px);

								transition: opacity 0.4s $linear,
									transform 0.4s $easeOut;
							}
						}
					}
				}
			}
		}
	}
}
